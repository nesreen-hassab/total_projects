/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package network_security;

/**
 *
 * @author nesreen
 */
public class ceaser_playfair extends javax.swing.JFrame {

    /**
     * Creates new form ceaser_playfair
     */
    public ceaser_playfair() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        encription = new javax.swing.JButton();
        decription = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        combo = new javax.swing.JComboBox<>();
        key = new javax.swing.JTextField();
        plaintext = new javax.swing.JTextField();
        ciphertext = new javax.swing.JTextField();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 204));

        encription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        encription.setText("encript");
        encription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encriptionActionPerformed(evt);
            }
        });

        decription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        decription.setText("decript");
        decription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decriptionActionPerformed(evt);
            }
        });

        jLabel1.setText("select your algorithm");

        combo.setBackground(new java.awt.Color(51, 255, 204));
        combo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        combo.setForeground(new java.awt.Color(102, 0, 102));
        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[-- select one algorithm--]", "cease algorithm", "playfair algorithim", "des algorithm", "stream_RC4" }));
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });

        key.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        key.setText("key");
        key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyActionPerformed(evt);
            }
        });

        plaintext.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        plaintext.setText("plaintext");
        plaintext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plaintextActionPerformed(evt);
            }
        });

        ciphertext.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ciphertext.setText("ciphertext");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(plaintext)
                    .addComponent(key)
                    .addComponent(ciphertext, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(combo, 0, 174, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(decription, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(encription, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(encription, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(plaintext, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decription, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ciphertext, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encriptionActionPerformed

        // TODO add your handling code here:
        
        if(combo.getSelectedIndex()==1)
        {
            String p=plaintext.getText();
            int k=Integer.parseInt(key.getText());
            String oop=Network_security.encription(p, k);
            ciphertext.setText(oop);
        }
        else if(combo.getSelectedIndex()==2)
        {
            String p=plaintext.getText();
            String k=key.getText();
            String oop=playfair.encript(p, k);
            ciphertext.setText(oop);
        }
        else if(combo.getSelectedIndex()==3)
        {
            String p=plaintext.getText();
            String k=key.getText();
            String oop=Des_algorithim.encrypt(p, k);
            ciphertext.setText(oop);
            
        }
        else if(combo.getSelectedIndex()==4)
        {
            String p=plaintext.getText();
            String k=key.getText();
            String oop=stream_RC4.encript(p, k);
            ciphertext.setText(oop);
            
        }
    }//GEN-LAST:event_encriptionActionPerformed

    private void plaintextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plaintextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_plaintextActionPerformed

    private void decriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decriptionActionPerformed
        if(combo.getSelectedIndex()==1)
        {
            String c=ciphertext.getText();
            int k= Integer.parseInt(key.getText());
            String oop=Network_security.decription(c, k);
            plaintext.setText(oop);
        }

        else if (combo.getSelectedIndex()==2)
        {
            String c =ciphertext.getText();
            String k =key.getText();
            String oop =playfair.decript(c, k);
            plaintext.setText(oop);
        }
        else if (combo.getSelectedIndex()==3)
        {
            String c =ciphertext.getText();
            String k =key.getText();
            String oop =Des_algorithim.decrypt(c, k);
            plaintext.setText(oop);
        }
        else if (combo.getSelectedIndex()==4)
        {
            String c =ciphertext.getText();
            String k =key.getText();
            String oop =stream_RC4.decript(c, k);
            plaintext.setText(oop);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_decriptionActionPerformed

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboActionPerformed

    private void keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ceaser_playfair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ceaser_playfair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ceaser_playfair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ceaser_playfair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ceaser_playfair().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ciphertext;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JButton decription;
    private javax.swing.JButton encription;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField key;
    private javax.swing.JTextField plaintext;
    // End of variables declaration//GEN-END:variables
}
